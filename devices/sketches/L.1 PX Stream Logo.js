p = [22, 31, 17, 44, 57, 35, 17, 59, 60, 56, 15, 56, 74, 56, 62, 60, 18, 62, 31, 56, 61, 32, 62, 61, 19, 48, 32, 48, 36, 66, 69, 57, 75, 56, 42, 34, 61, 56, 25, 39, 54, 28, 48, 29, 45, 42, 53, 53, 64, 41, 56, 38, 17, 52, 20, 60, 28, 54, 24, 49, 57, 49, 24, 42, 68, 60, 70, 49, 17, 45, 66, 50, 15, 54, 17, 35, 53, 32, 49, 33, 61, 40, 17, 37, 49, 60, 50, 52, 32, 52, 18, 44, 44, 34, 34, 52, 50, 30, 34, 44, 37, 53, 42, 38, 49, 59, 42, 58, 81, 66, 79, 53, 21, 56, 28, 52, 71, 52, 20, 53, 33, 55, 18, 53, 17, 41, 77, 50, 74, 52, 55, 56, 65, 54, 16, 42, 27, 36, 29, 56, 24, 63, 48, 62, 75, 53, 76, 52, 21, 62, 82, 67, 45, 29, 57, 42, 71, 58, 41, 60, 20, 58, 82, 64, 71, 59, 53, 61, 27, 34, 60, 36, 42, 43, 65, 53, 36, 67, 34, 57, 20, 62, 40, 61, 32, 47, 17, 42, 60, 60, 33, 50, 40, 31, 59, 51, 69, 54, 42, 29, 69, 52, 56, 41, 26, 62, 26, 40, 21, 63, 54, 40, 73, 56, 20, 59, 51, 29, 24, 40, 44, 28, 62, 51, 80, 61, 23, 41, 50, 54, 61, 51, 45, 54, 38, 37, 24, 61, 33, 44, 53, 59, 74, 54, 19, 54, 69, 43, 64, 59, 21, 55, 44, 33, 26, 49, 78, 54, 46, 36, 42, 28, 58, 40, 58, 31, 73, 58, 63, 56, 60, 40, 67, 62, 47, 56, 47, 60, 53, 64, 45, 53, 59, 53, 68, 47, 66, 44, 30, 48, 16, 57, 55, 29, 44, 35, 71, 53, 49, 56, 26, 48, 80, 56, 77, 53, 63, 54, 70, 50, 46, 51, 57, 36, 29, 59, 56, 32, 16, 56, 36, 55, 26, 47, 46, 29, 43, 40, 69, 47, 56, 51, 80, 57, 49, 30, 27, 49, 30, 58, 47, 34, 64, 40, 50, 62, 52, 64, 54, 63, 42, 36, 15, 58, 60, 31, 44, 52, 62, 53, 19, 59, 57, 57, 41, 40, 33, 69, 56, 44, 28, 57, 46, 35, 20, 46, 40, 60, 49, 57, 78, 57, 53, 54, 52, 62, 42, 53, 41, 49, 26, 58, 52, 61, 40, 63, 58, 60, 61, 34, 28, 48, 22, 32, 49, 32, 42, 39, 36, 69, 17, 36, 42, 44, 22, 41, 72, 44, 35, 45, 33, 54, 43, 63, 72, 55, 43, 43, 44, 45, 32, 55, 73, 52, 29, 60, 49, 62, 40, 58, 24, 60, 47, 30, 60, 55, 18, 47, 66, 58, 52, 29, 22, 55, 51, 30, 41, 38, 53, 41, 55, 42, 55, 31, 67, 42, 77, 56, 34, 46, 58, 50, 28, 60, 58, 32, 20, 61, 39, 29, 19, 37, 16, 39, 18, 61, 22, 49, 73, 50, 33, 68, 44, 41, 32, 57, 26, 59, 28, 35, 48, 55, 43, 60, 18, 43, 42, 64, 72, 49, 40, 53, 46, 57, 50, 32, 33, 49, 56, 42, 37, 36, 54, 52, 17, 54, 44, 39, 50, 64, 23, 47, 25, 40, 16, 37, 16, 38, 35, 55, 78, 56, 43, 28, 50, 29, 20, 32, 34, 58, 40, 33, 16, 60, 49, 29, 41, 57, 25, 59, 35, 67, 54, 44, 41, 50, 21, 31, 33, 53, 41, 53, 50, 51, 85, 66, 48, 54, 42, 61, 57, 59, 53, 51, 23, 58, 67, 52, 54, 55, 45, 39, 33, 66, 62, 30, 41, 51, 33, 56, 39, 51, 34, 68, 57, 50, 43, 64, 77, 61, 69, 60, 48, 30, 72, 54, 29, 54, 20, 48, 56, 31, 73, 57, 16, 52, 48, 58, 62, 58, 21, 59, 42, 37, 79, 54, 76, 49, 61, 55, 36, 56, 22, 48, 20, 45, 59, 50, 42, 46, 25, 49, 54, 32, 69, 61, 51, 51, 60, 51, 68, 56, 82, 62, 43, 34, 31, 55, 22, 61, 56, 54, 76, 51, 67, 49, 55, 54, 62, 40, 41, 61, 54, 61, 46, 58, 22, 59, 54, 34, 34, 69, 61, 61, 55, 57, 60, 50, 23, 55, 34, 45, 28, 41, 57, 55, 62, 31, 78, 53, 82, 66, 80, 64, 69, 44, 34, 47, 59, 34, 37, 52, 31, 54, 64, 61, 54, 33, 67, 60, 33, 61, 52, 28, 43, 53, 78, 58, 17, 55, 30, 52, 48, 61, 75, 55, 17, 53, 62, 41, 67, 50, 79, 60, 68, 57, 60, 57, 45, 44, 51, 56, 45, 51, 50, 35, 35, 68, 61, 39, 24, 34, 33, 46, 46, 52, 33, 43, 34, 54, 60, 39, 38, 54, 19, 45, 80, 59, 62, 59, 75, 54, 16, 59, 80, 55, 28, 37, 83, 67, 80, 62, 55, 51, 70, 45, 23, 48, 55, 61, 19, 53, 40, 32, 26, 34, 47, 54, 72, 50, 44, 43, 60, 33, 65, 61, 16, 40, 28, 36, 66, 60, 20, 52, 52, 52, 42, 35, 33, 42, 36, 57, 21, 61, 59, 33, 57, 54, 14, 56, 75, 59, 14, 55, 75, 48, 42, 56, 58, 53, 42, 51, 73, 53, 25, 35, 68, 53, 26, 35, 40, 28, 80, 60, 28, 50, 79, 62, 78, 52, 22, 39, 43, 55, 33, 62, 47, 28, 74, 49, 63, 61, 67, 59, 38, 29, 28, 49, 15, 59, 53, 30, 82, 65, 84, 66, 35, 44, 19, 33, 55, 30, 48, 33, 48, 56, 50, 57, 28, 47, 19, 61, 34, 64, 34, 59, 40, 59, 44, 29, 60, 29, 19, 44, 55, 59, 19, 47, 33, 59, 36, 64, 68, 54, 42, 31, 19, 46, 58, 57, 28, 40, 34, 42, 36, 60, 32, 56, 21, 58, 32, 60, 18, 59, 77, 54, 58, 56, 62, 29, 52, 60, 20, 34, 51, 53, 42, 62, 60, 58, 35, 69, 76, 54, 67, 61, 23, 40, 58, 55, 25, 36, 53, 43, 69, 50, 63, 41, 62, 54, 33, 51, 43, 29, 43, 56, 56, 36, 46, 34, 81, 64, 33, 52, 50, 33, 55, 37, 51, 31, 83, 66, 43, 61, 74, 51, 16, 43, 19, 42, 56, 30, 57, 51, 53, 44, 45, 35, 39, 36, 16, 53, 52, 43, 69, 51, 18, 60, 17, 61, 40, 29, 55, 43, 77, 58, 35, 60, 59, 30, 57, 52, 33, 63, 30, 50, 66, 51, 58, 34, 61, 52, 24, 48, 52, 56, 66, 61, 74, 55, 27, 48, 64, 50, 43, 32, 41, 35, 60, 61, 71, 56, 72, 59, 79, 56, 68, 43, 59, 52, 58, 38, 41, 37, 49, 31, 66, 55, 59, 55, 70, 44, 30, 49, 67, 48, 32, 43, 36, 63, 28, 55, 54, 39, 58, 37, 42, 33, 42, 57, 42, 40, 74, 58, 48, 52, 56, 34, 27, 37, 65, 41, 67, 55, 56, 43, 61, 38, 78, 62, 55, 52, 26, 38, 23, 31, 49, 51, 33, 58, 55, 55, 34, 61, 58, 36, 43, 46, 57, 60, 28, 51, 69, 49, 46, 55, 43, 51, 71, 54, 59, 35, 15, 55, 20, 54, 60, 37, 48, 32, 71, 44, 18, 52, 27, 42, 33, 47, 70, 47, 45, 41, 22, 40, 27, 59, 17, 58, 55, 33, 42, 32, 47, 33, 47, 62, 60, 52, 57, 41, 59, 61, 71, 55, 61, 50, 47, 53, 18, 36, 19, 57, 23, 42, 40, 57, 43, 54, 65, 52, 35, 64, 45, 46, 27, 58, 52, 51, 34, 49, 34, 50, 30, 51, 22, 63, 29, 57, 71, 57, 59, 57, 73, 54, 81, 65, 29, 53, 34, 56, 64, 42, 59, 37, 17, 43, 50, 53, 23, 56, 36, 68, 24, 41, 43, 33, 47, 29, 69, 48, 68, 63, 18, 54, 50, 34, 63, 30, 48, 63, 43, 39, 17, 57, 62, 39, 23, 62, 28, 38, 75, 52, 43, 58, 32, 44, 44, 53, 32, 59, 71, 49, 41, 63, 56, 59, 67, 63, 32, 50, 41, 32]

//t=0,draw=$=>{t||createCanvas(),background(0),stroke(255,127);for(t+=1,i=0;i<p.length;i+=2)point(p[i],p[i+1])}

base = []  // store base positions
phases = [] // per-point offsets
speeds = []

D = 5
T = 3

t = 0
draw = _ => {
  if (!t) {
    createCanvas(200,100)

    // init arrays
    for (let i = 0; i < p.length * D; i += 2) {
      base.push([
        (p[i % p.length] - 50) * 4 + 107,
        (p[i % p.length + 1] - 50) * 2 + 54
      ])
      phases.push(random(TAU))        // random phase
      speeds.push(random(0.005, 0.02)) // different speeds
    }
  }

  background(0)
  stroke(255, 255)

  prevSet = 0
  set = 0
  
  for (let i = 0; i < base.length; i++) {
    set = Math.floor(i / p.length)
    
    if (set !== prevSet) {
      prevSet = set
      stroke(255, 255 / (set + .5))
    }
  
    let [bx, by] = base[i]
    let phase = phases[i]
    let spd = speeds[i]

    // use both sin & cos with phase shift to get "orbit-y" motion
    let dx = sin(t * spd + phase) * T * set / 2
    let dy = cos(t * spd * 1.3 + phase * 1.7) * T * set

    point(bx + dx, by * 1 + dy)
  }

  t += 2
}
